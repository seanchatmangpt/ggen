name: Lint GGen Cookbook

on:
  push:
    branches: [master, main]
    paths:
      - "docs/ggen-cookbook-2nd/**"
  pull_request:
    branches: [master, main]
    paths:
      - "docs/ggen-cookbook-2nd/**"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install mdBook
        run: |
          curl -L https://github.com/rust-lang/mdBook/releases/download/v0.4.36/mdbook-v0.4.36-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv mdbook /usr/local/bin/

      - name: Install markdownlint
        run: |
          sudo npm install -g markdownlint-cli

      - name: Lint markdown files
        run: |
          cd docs/ggen-cookbook-2nd
          find . -name "*.md" -not -path "./book/*" | xargs markdownlint

      - name: Check for broken links
        run: |
          cd docs/ggen-cookbook-2nd
          mdbook build
          mdbook test --library-path ../../target/debug

      - name: Validate template syntax
        run: |
          cd docs/ggen-cookbook-2nd
          find . -name "*.tmpl" | while read file; do
            echo "Validating $file"
            # Check for required frontmatter fields
            if ! grep -q "name:" "$file"; then
              echo "Error: $file missing 'name' field"
              exit 1
            fi
            if ! grep -q "description:" "$file"; then
              echo "Error: $file missing 'description' field"
              exit 1
            fi
          done

      - name: Check for TODO/FIXME comments
        run: |
          cd docs/ggen-cookbook-2nd
          if grep -r "TODO\|FIXME" --include="*.md" --include="*.tmpl" .; then
            echo "Warning: Found TODO/FIXME comments"
          fi

      - name: Validate pattern format
        run: |
          cd docs/ggen-cookbook-2nd/patterns
          for file in *.md; do
            echo "Validating pattern format in $file"
            # Check for required pattern sections
            if ! grep -q "## Context" "$file"; then
              echo "Error: $file missing 'Context' section"
              exit 1
            fi
            if ! grep -q "## Problem" "$file"; then
              echo "Error: $file missing 'Problem' section"
              exit 1
            fi
            if ! grep -q "## Solution" "$file"; then
              echo "Error: $file missing 'Solution' section"
              exit 1
            fi
            if ! grep -q "## Consequences" "$file"; then
              echo "Error: $file missing 'Consequences' section"
              exit 1
            fi
          done
