[package]
name = "ggen"
version = "1.1.0"
authors = ["Sean Chatman <sean@chatmangpt.com>"]
edition = "2021"
repository = "https://github.com/seanchatmangpt/ggen"
readme = "README.md"
license = "MIT"
keywords = ["cli", "code-generation", "rdf", "templates"]
homepage = "https://github.com/seanchatmangpt/ggen"
categories = ["development-tools", "command-line-utilities"]
description = """
ggen is a deterministic, language-agnostic code generation framework that treats software artifacts as projections of knowledge graphs.
"""

[workspace]
members = [
  "utils",
  "cli",
  "ggen-core",
  "ggen-mcp",
  "ggen-ai",
  "examples/frontmatter-cli",
  "examples/natural-market-search",
  "examples/ai-template-project",
]
resolver = "2" # Use new resolver for better dependency resolution

# Workspace-wide dependencies for version consistency
[workspace.dependencies]
tokio = { version = "1.47", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
thiserror = "2.0"
async-trait = "0.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = [
  "env-filter",
  "json",
  "ansi",
] }
clap = { version = "4.5", features = ["derive"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
tempfile = "3.8"
chrono = { version = "0.4", features = ["serde"] }
futures = "0.3"
futures-util = "0.3"
uuid = { version = "1.0", features = ["v4", "serde"] }
tera = "1.20"
oxigraph = "0.5.0"
toml = "0.9"
serde_yaml = "0.9"
regex = "1.10"
rayon = "1.11"

# CLI Enhancement libraries
indicatif = "0.17"
console = "0.16"

# Testing libraries
proptest = "1.4"

# Allow multiple crate versions due to complex dependency tree
[workspace.lints.clippy]
multiple_crate_versions = "allow"

[features]
nightly = ["ggen-utils/nightly"]
termlog = ["ggen-utils/termlog"]
journald = ["ggen-utils/journald"]
syslog = ["ggen-utils/syslog"]

[dependencies]
ggen-utils = { path = "utils", version = "1.0.0" }
ggen-cli-lib = { path = "cli", version = "1.0.0" }
ggen-core = { path = "ggen-core", version = "1.0.0" }
ggen-ai = { path = "ggen-ai", version = "1.0.0" }
human-panic = "2.0.0"
better-panic = "0.3.0"
log = "0.4.27"
env_logger = "0.11"
tokio = { version = "1.0", features = ["full"] }
anyhow = "1.0"
chrono = { version = "0.4", features = ["serde"] }
serde_json = "1.0"
serde_yaml = "0.9"
clap = { version = "4.0", features = ["derive"] }
tempfile = "3.0"
tera = "1.0"
async-trait = "0.1"
serde = { version = "1.0", features = ["derive"] }
uuid = { version = "1.0", features = ["v4"] }
genai = "0.4"
tracing-subscriber = "0.3"

# Example definitions removed - examples now discovered automatically by Cargo

[dev-dependencies]
assert_cmd = "2.0.17"
predicates = "3.1.3"
serde_json = "1.0"
tempfile = "3.0"
anyhow = "1.0"
chrono = { version = "0.4", features = ["serde"] }
# BDD testing framework
cucumber = { version = "0.20", features = ["macros"] }
assert_fs = "1.0"
mockito = "1.2"
insta = "1.34"
serial_test = "3.0"
md5 = "0.7"
shell-words = "1.1"
# E2E test dependencies
toml = "0.8"
reqwest = { version = "0.12", features = ["blocking", "json"] }
genai = "0.4"

[profile.dev]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 256          # More parallel compilation units = faster builds
incremental = true           # Enable incremental compilation
split-debuginfo = "unpacked" # Faster debug builds on macOS

[profile.release]
opt-level = 3
debug = false
rpath = false
lto = "thin"             # Thin LTO for faster builds, still optimized
debug-assertions = false
codegen-units = 16       # Balance between speed and optimization
strip = true             # Strip symbols for smaller binaries

[profile.test]
opt-level = 0           # Faster test compilation
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 256     # More parallel compilation
incremental = true      # Enable incremental for tests

[profile.bench]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
