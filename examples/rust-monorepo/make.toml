# Advanced Rust Monorepo - Full Lifecycle Example
# Demonstrates: workspaces, parallel execution, hooks, caching

[workspace.core]
path = "crates/core"

[workspace.cli]
path = "crates/cli"

[workspace.utils]
path = "crates/utils"

# LIFECYCLE PHASES

[lifecycle.init]
command = "cargo init --lib || echo 'Already initialized'"
parallel = false

[lifecycle.setup]
commands = [
    "rustup component add rustfmt clippy",
    "cargo install cargo-watch cargo-audit",
]

[lifecycle.format]
command = "cargo fmt --all -- --check"
parallel = true

[lifecycle.lint]
command = "cargo clippy --all-targets --all-features -- -D warnings"
parallel = true

[lifecycle.build]
command = "cargo build --release"
parallel = true
cache_key = "{{ env.CARGO_HOME }}/{{ hash('Cargo.lock') }}"

[lifecycle.test]
command = "cargo test --all-features"
parallel = true

[lifecycle.bench]
command = "cargo bench --no-fail-fast"
parallel = false

[lifecycle.audit]
command = "cargo audit"

[lifecycle.doc]
command = "cargo doc --no-deps --all-features"
parallel = true

[lifecycle.deploy]
commands = [
    "cargo build --release",
    "mkdir -p ../../target/release",
    "cp target/release/* ../../target/release/ 2>/dev/null || true",
]

# HOOKS - Advanced hook system demonstration

[hooks]
before_all = ["init", "setup"]
after_all = ["audit"]

before_build = ["format", "lint"]
after_build = ["test"]

before_deploy = ["build", "test"]
after_deploy = ["doc"]

# ENVIRONMENT
[env]
RUST_BACKTRACE = "1"
CARGO_INCREMENTAL = "1"
