# GitHub Actions E2E Test Configuration
#
# This file should be copied to .github/workflows/e2e_tests.yml

name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  e2e-tests:
    name: E2E Tests - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            rust: beta
          - os: ubuntu-latest
            rust: nightly

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache target directory
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-target-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-${{ matrix.rust }}-

      - name: Check formatting
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        run: cargo fmt --all -- --check

      - name: Run clippy
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build tests
        run: cargo build --tests --verbose

      - name: Run E2E tests
        run: cargo test --test llm_e2e --verbose

      - name: Generate coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out Xml --test llm_e2e

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        uses: codecov/codecov-action@v3
        with:
          files: ./cobertura.xml
          flags: e2e-tests
          name: e2e-coverage
          fail_ci_if_error: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.rust }}
          path: |
            target/debug/deps/*.log
            target/debug/*.log
          retention-days: 7

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: e2e-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run performance benchmarks
        run: cargo test --test llm_e2e --release -- --nocapture | tee perf.log

      - name: Analyze performance
        run: |
          echo "## Performance Results" >> $GITHUB_STEP_SUMMARY
          grep "test result:" perf.log >> $GITHUB_STEP_SUMMARY
          grep "duration:" perf.log >> $GITHUB_STEP_SUMMARY || true

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: perf.log
          retention-days: 30

  real-provider-tests:
    name: Real Provider Integration Tests
    runs-on: ubuntu-latest
    needs: e2e-tests
    # Only run on main branch or when manually triggered
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run real provider tests
        env:
          # These should be set as GitHub secrets
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          if [ -n "$OPENAI_API_KEY" ] || [ -n "$ANTHROPIC_API_KEY" ]; then
            cargo test --test llm_e2e --features real_providers -- --test-threads=1
          else
            echo "Skipping real provider tests - no API keys configured"
          fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: e2e-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run cargo audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "# E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Matrix Results" >> $GITHUB_STEP_SUMMARY
          echo "Check individual jobs for detailed results" >> $GITHUB_STEP_SUMMARY
