{
  "timestamp": "2025-10-10T07:25:00Z",
  "swarm_id": "swarm_1760081081210_fvfbrrjoj",
  "topology": "mesh",
  "strategy": "adaptive",

  "performance_metrics": {
    "tasks_executed": 226,
    "success_rate": 0.809931271784444,
    "success_rate_percentage": "80.99%",
    "avg_execution_time_seconds": 7.011639916972985,
    "agents_spawned": 14,
    "agents_active": 3,
    "agents_capacity": 8,
    "agent_utilization": 0.375,
    "memory_efficiency": 0.7190178710508027,
    "neural_events": 32
  },

  "agent_details": [
    {
      "agent_id": "agent_1760081126249_4sgo0b",
      "name": "performance-monitor",
      "type": "monitor",
      "status": "active",
      "capabilities": [
        "real-time-metrics",
        "bottleneck-detection",
        "agent-status-tracking"
      ],
      "utilization_estimate": 0.65,
      "queue_depth": 0
    },
    {
      "agent_id": "agent_1760081128882_auzsco",
      "name": "task-optimizer",
      "type": "optimizer",
      "status": "active",
      "capabilities": [
        "dynamic-reallocation",
        "load-balancing",
        "critical-path-analysis"
      ],
      "utilization_estimate": 0.45,
      "queue_depth": 2
    },
    {
      "agent_id": "agent_1760081129361_c8ptup",
      "name": "pattern-learner",
      "type": "analyst",
      "status": "active",
      "capabilities": [
        "pattern-recognition",
        "success-analysis",
        "failure-prevention"
      ],
      "utilization_estimate": 0.30,
      "queue_depth": 1
    }
  ],

  "bottlenecks_detected": [
    {
      "type": "execution_time",
      "severity": "medium",
      "current_value": 7.01,
      "target_value": 5.0,
      "variance_percentage": 40.2,
      "root_cause": "Sequential processing patterns",
      "recommendation": "Increase parallel task decomposition"
    },
    {
      "type": "agent_utilization",
      "severity": "high",
      "current_value": 0.375,
      "target_value": 0.70,
      "variance_percentage": -46.4,
      "root_cause": "Conservative spawning strategy",
      "recommendation": "Implement proactive agent spawning"
    },
    {
      "type": "success_rate",
      "severity": "medium",
      "current_value": 0.8099,
      "target_value": 0.95,
      "variance_percentage": -14.7,
      "root_cause": "Task failures without retry logic",
      "recommendation": "Enable self-healing mechanisms"
    }
  ],

  "optimization_targets": [
    {
      "metric": "success_rate",
      "current": 0.8099,
      "target": 0.95,
      "timeline_days": 7,
      "priority": "critical",
      "actions": [
        "Enable automatic retry (3 attempts)",
        "Implement self-healing mechanisms",
        "Enhanced error handling"
      ]
    },
    {
      "metric": "avg_execution_time",
      "current": 7.01,
      "target": 5.0,
      "timeline_days": 14,
      "priority": "high",
      "actions": [
        "Parallel task execution",
        "Task pre-assignment",
        "Pipeline optimization"
      ]
    },
    {
      "metric": "agent_utilization",
      "current": 0.375,
      "target": 0.70,
      "timeline_days": 3,
      "priority": "high",
      "actions": [
        "Scale to 6 agents immediately",
        "Predictive workload scaling",
        "Task queue optimization"
      ]
    },
    {
      "metric": "memory_efficiency",
      "current": 0.719,
      "target": 0.85,
      "timeline_days": 14,
      "priority": "medium",
      "actions": [
        "Memory usage profiling",
        "Garbage collection optimization",
        "Caching strategy review"
      ]
    }
  ],

  "self_healing_status": {
    "enabled": false,
    "auto_retry": false,
    "max_retries": 0,
    "recovery_success_rate": null,
    "recommendation": "Enable self-healing for improved reliability"
  },

  "learning_progress": {
    "neural_events_captured": 32,
    "patterns_recognized": 12,
    "successful_patterns_library": 8,
    "failure_modes_cataloged": 4,
    "optimization_iterations": 3,
    "learning_rate": 0.023
  },

  "recommendations": {
    "immediate": [
      "Scale swarm to 6 agents",
      "Enable task pre-assignment",
      "Activate self-healing with 3 retry attempts"
    ],
    "short_term": [
      "Implement parallel execution framework (60% workload target)",
      "Deploy real-time monitoring dashboard",
      "Train neural models on successful patterns"
    ],
    "long_term": [
      "ML-based predictive scaling",
      "Automatic topology adaptation",
      "Quality assurance integration"
    ]
  },

  "next_review": "2025-10-11T07:25:00Z",
  "monitoring_interval_seconds": 86400,
  "status": "active",
  "coordinator": "adaptive-coordinator"
}
