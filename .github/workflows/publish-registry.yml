name: Publish Registry to GitHub Pages

on:
  push:
    paths:
      - "registry/**"
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-running: true

jobs:
  validate-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Validate registry index
        run: |
          # Check JSON syntax
          python3 -m json.tool registry/index.json > /dev/null
          echo "✅ Registry index JSON is valid"

          # Check required fields
          python3 -c "
          import json
          with open('registry/index.json') as f:
              data = json.load(f)

          # Validate structure
          assert 'updated' in data, 'Missing updated field'
          assert 'packs' in data, 'Missing packs field'

          for pack_id, pack in data['packs'].items():
              assert 'id' in pack, f'Pack {pack_id} missing id'
              assert 'latest_version' in pack, f'Pack {pack_id} missing latest_version'
              assert 'versions' in pack, f'Pack {pack_id} missing versions'
              
              for version, version_data in pack['versions'].items():
                  assert 'git_url' in version_data, f'Version {version} missing git_url'
                  assert 'git_rev' in version_data, f'Version {version} missing git_rev'
                  assert 'sha256' in version_data, f'Version {version} missing sha256'

          print('✅ Registry structure validation passed')
          "

      - name: Test registry client
        run: |
          cargo make test-marketplace

  build-and-deploy:
    needs: validate-registry
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare registry files
        run: |
          mkdir -p _site
          cp -r registry/* _site/

          # Add index.html for better GitHub Pages experience
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Rgen Marketplace Registry</title>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  .header { text-align: center; margin-bottom: 40px; }
                  .pack { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 8px; }
                  .pack-id { font-weight: bold; color: #0366d6; }
                  .pack-description { color: #666; margin: 10px 0; }
                  .pack-meta { font-size: 0.9em; color: #888; }
                  code { background: #f6f8fa; padding: 2px 4px; border-radius: 3px; font-family: 'SFMono-Regular', Consolas, monospace; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>Rgen Marketplace Registry</h1>
                  <p>Official registry of reusable code generation packs</p>
              </div>
              
              <div id="packs"></div>
              
              <script>
                  fetch('index.json')
                      .then(response => response.json())
                      .then(data => {
                          const packsDiv = document.getElementById('packs');
                          for (const [packId, pack] of Object.entries(data.packs)) {
                              const packDiv = document.createElement('div');
                              packDiv.className = 'pack';
                              packDiv.innerHTML = `
                                  <div class="pack-id">${pack.name}</div>
                                  <div class="pack-description">${pack.description}</div>
                                  <div class="pack-meta">
                                      <strong>ID:</strong> <code>${pack.id}</code><br>
                                      <strong>Version:</strong> ${pack.latest_version}<br>
                                      <strong>Category:</strong> ${pack.category || 'Uncategorized'}<br>
                                      <strong>License:</strong> ${pack.license || 'Unknown'}<br>
                                      <strong>Install:</strong> <code>rgen add ${pack.id}</code>
                                  </div>
                              `;
                              packsDiv.appendChild(packDiv);
                          }
                      })
                      .catch(error => {
                          document.getElementById('packs').innerHTML = '<p>Error loading registry data</p>';
                      });
              </script>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
